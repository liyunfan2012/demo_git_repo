Search.setIndex({"docnames": ["complexdf_processor", "complexdf_processor.column_transformer", "complexdf_processor.column_transformer._base", "complexdf_processor.column_transformer._series_processor", "complexdf_processor.complex_float", "complexdf_processor.complex_float._base", "complexdf_processor.complex_float._complex_type", "complexdf_processor.complexdf_processor", "index", "modules"], "filenames": ["complexdf_processor.rst", "complexdf_processor.column_transformer.rst", "complexdf_processor.column_transformer._base.rst", "complexdf_processor.column_transformer._series_processor.rst", "complexdf_processor.complex_float.rst", "complexdf_processor.complex_float._base.rst", "complexdf_processor.complex_float._complex_type.rst", "complexdf_processor.complexdf_processor.rst", "index.rst", "modules.rst"], "titles": ["complexdf_processor package", "complexdf_processor.column_transformer package", "complexdf_processor.column_transformer._base module", "complexdf_processor.column_transformer._series_processor module", "complexdf_processor.complex_float package", "complexdf_processor.complex_float._base module", "complexdf_processor.complex_float._complex_type module", "complexdf_processor.complexdf_processor module", "Welcome to complexdf_processor\u2019s documentation!", "complexdf_processor"], "terms": {"column_transform": 0, "_base": [0, 1, 4], "columndroptrivi": [0, 1, 2], "columnmaprot": [0, 1, 2], "complexdfconjug": [0, 1, 2], "_series_processor": [0, 1, 2], "seriesprocessor": [0, 1, 2, 3], "complex_float": 0, "complexfloat": [0, 3, 4, 5], "_complex_typ": [0, 4], "complexfloatcor": [0, 4, 5, 6], "complexdfprocessordemo": [0, 7], "gen_demo_data": [0, 7], "fit": [1, 2], "transform": [1, 2], "inverse_transform": [1, 2], "seri": [1, 2, 3], "uniqu": [1, 2, 3], "rotat": [1, 2, 3, 4, 5], "conj": [1, 3, 4, 6], "class": [2, 3, 5, 6, 7], "sourc": [2, 3, 5, 6, 7], "base": [2, 3, 5, 6, 7], "baseestim": 2, "transformermixin": 2, "drop": 2, "column": 2, "one": 2, "valu": [2, 3], "sp": [2, 3], "instanc": 2, "from": [2, 3], "import": [2, 3], "panda": 2, "pd": 2, "numpi": 2, "np": 2, "s1": 2, "1": [2, 3], "s2": 2, "5": [2, 3], "0": [2, 3, 5, 6], "2": [2, 3], "3": 2, "s3": 2, "none": [2, 5, 6], "x": 2, "datafram": 2, "cmr": 2, "fit_transform": 2, "1i": [2, 3], "5i": [2, 3], "4": 2, "0i": 2, "y": 2, "shape": 2, "n_sampl": 2, "n_featur": 2, "input": 2, "data": 2, "where": 2, "i": 2, "number": 2, "sampl": 2, "featur": 2, "ignor": 2, "Not": 2, "us": 2, "present": 2, "here": 2, "api": 2, "consist": 2, "convent": 2, "self": 2, "object": [2, 3, 6, 7], "estim": 2, "The": [2, 3], "complet": 2, "x_t": 2, "n_non_trivial_featur": 2, "non_trivi": 2, "append": 2, "phi": [2, 3, 5], "float": 2, "default": 2, "angl": 2, "rad": 2, "list": [2, 3], "string": 2, "name": 2, "map": 2, "math": 2, "pi": 2, "2i": [2, 3], "nan": 2, "calcul": 2, "conjug": [2, 4, 5], "complex": 3, "oper": 3, "static": 3, "lst": 3, "gener": 3, "re": [3, 5, 6], "im": [3, 5, 6], "tupl": [3, 4, 6], "constructor": 3, "": 3, "part": 3, "dtype": 3, "complextfloat": 3, "mod": [4, 5, 6], "arg": [4, 5, 6], "properti": 6, "packag": [8, 9], "index": 8, "modul": [8, 9], "search": 8, "page": 8, "subpackag": 9, "submodul": 9, "content": 9}, "objects": {"": [[0, 0, 0, "-", "complexdf_processor"]], "complexdf_processor": [[1, 0, 0, "-", "column_transformer"], [4, 0, 0, "-", "complex_float"], [7, 0, 0, "-", "complexdf_processor"]], "complexdf_processor.column_transformer": [[2, 0, 0, "-", "_base"], [3, 0, 0, "-", "_series_processor"]], "complexdf_processor.column_transformer._base": [[2, 1, 1, "", "ColumnDropTrivial"], [2, 1, 1, "", "ColumnMapRotate"], [2, 1, 1, "", "ComplexDfConjugate"]], "complexdf_processor.column_transformer._base.ColumnDropTrivial": [[2, 2, 1, "", "fit"], [2, 2, 1, "", "inverse_transform"], [2, 2, 1, "", "transform"]], "complexdf_processor.column_transformer._base.ColumnMapRotate": [[2, 2, 1, "", "fit"], [2, 2, 1, "", "inverse_transform"], [2, 2, 1, "", "transform"]], "complexdf_processor.column_transformer._base.ComplexDfConjugate": [[2, 2, 1, "", "fit"], [2, 2, 1, "", "inverse_transform"], [2, 2, 1, "", "transform"]], "complexdf_processor.column_transformer._series_processor": [[3, 1, 1, "", "SeriesProcessor"]], "complexdf_processor.column_transformer._series_processor.SeriesProcessor": [[3, 2, 1, "", "conj"], [3, 2, 1, "", "rotate"], [3, 2, 1, "", "series"], [3, 2, 1, "", "unique"]], "complexdf_processor.complex_float": [[5, 0, 0, "-", "_base"], [6, 0, 0, "-", "_complex_type"]], "complexdf_processor.complex_float._base": [[5, 1, 1, "", "ComplexFloat"]], "complexdf_processor.complex_float._base.ComplexFloat": [[5, 2, 1, "", "conjugate"], [5, 2, 1, "", "rotate"]], "complexdf_processor.complex_float._complex_type": [[6, 1, 1, "", "ComplexFloatCore"]], "complexdf_processor.complex_float._complex_type.ComplexFloatCore": [[6, 3, 1, "", "arg"], [6, 3, 1, "", "conj"], [6, 3, 1, "", "mod"], [6, 3, 1, "", "tuple"]], "complexdf_processor.complexdf_processor": [[7, 1, 1, "", "ComplexDfProcessorDemo"]], "complexdf_processor.complexdf_processor.ComplexDfProcessorDemo": [[7, 2, 1, "", "gen_demo_data"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"]}, "titleterms": {"complexdf_processor": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "packag": [0, 1, 4], "subpackag": 0, "submodul": [0, 1, 4], "modul": [0, 1, 2, 3, 4, 5, 6, 7], "content": [0, 1, 4, 8], "column_transform": [1, 2, 3], "_base": [2, 5], "attribut": 2, "exampl": [2, 3], "paramet": [2, 3], "return": [2, 3], "_series_processor": 3, "complex_float": [4, 5, 6], "_complex_typ": 6, "welcom": 8, "": 8, "document": 8, "indic": 8, "tabl": 8}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"complexdf_processor package": [[0, "complexdf-processor-package"]], "Subpackages": [[0, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [4, "submodules"]], "Module contents": [[0, "module-complexdf_processor"], [1, "module-complexdf_processor.column_transformer"], [4, "module-complexdf_processor.complex_float"]], "complexdf_processor.column_transformer package": [[1, "complexdf-processor-column-transformer-package"]], "complexdf_processor.column_transformer._base module": [[2, "module-complexdf_processor.column_transformer._base"]], "Attributes": [[2, "attributes"], [2, "id6"]], "Examples": [[2, "examples"], [2, "id7"], [2, "id9"], [3, "examples"]], "Parameters": [[2, "parameters"], [2, "id1"], [2, "id3"], [2, "id5"], [2, "id10"], [3, "parameters"], [3, "id1"]], "Returns": [[2, "returns"], [2, "id2"], [2, "id4"], [2, "id8"], [2, "id11"], [3, "returns"], [3, "id2"]], "complexdf_processor.column_transformer._series_processor module": [[3, "module-complexdf_processor.column_transformer._series_processor"]], "complexdf_processor.complex_float package": [[4, "complexdf-processor-complex-float-package"]], "complexdf_processor.complex_float._base module": [[5, "module-complexdf_processor.complex_float._base"]], "complexdf_processor.complex_float._complex_type module": [[6, "module-complexdf_processor.complex_float._complex_type"]], "complexdf_processor.complexdf_processor module": [[7, "module-complexdf_processor.complexdf_processor"]], "Welcome to complexdf_processor\u2019s documentation!": [[8, "welcome-to-complexdf-processor-s-documentation"]], "Contents:": [[8, null]], "Indices and tables": [[8, "indices-and-tables"]], "complexdf_processor": [[9, "complexdf-processor"]]}, "indexentries": {"complexdf_processor": [[0, "module-complexdf_processor"]], "module": [[0, "module-complexdf_processor"], [1, "module-complexdf_processor.column_transformer"], [2, "module-complexdf_processor.column_transformer._base"], [3, "module-complexdf_processor.column_transformer._series_processor"], [4, "module-complexdf_processor.complex_float"], [5, "module-complexdf_processor.complex_float._base"], [6, "module-complexdf_processor.complex_float._complex_type"], [7, "module-complexdf_processor.complexdf_processor"]], "complexdf_processor.column_transformer": [[1, "module-complexdf_processor.column_transformer"]], "columndroptrivial (class in complexdf_processor.column_transformer._base)": [[2, "complexdf_processor.column_transformer._base.ColumnDropTrivial"]], "columnmaprotate (class in complexdf_processor.column_transformer._base)": [[2, "complexdf_processor.column_transformer._base.ColumnMapRotate"]], "complexdfconjugate (class in complexdf_processor.column_transformer._base)": [[2, "complexdf_processor.column_transformer._base.ComplexDfConjugate"]], "complexdf_processor.column_transformer._base": [[2, "module-complexdf_processor.column_transformer._base"]], "fit() (columndroptrivial method)": [[2, "complexdf_processor.column_transformer._base.ColumnDropTrivial.fit"]], "fit() (columnmaprotate method)": [[2, "complexdf_processor.column_transformer._base.ColumnMapRotate.fit"]], "fit() (complexdfconjugate method)": [[2, "complexdf_processor.column_transformer._base.ComplexDfConjugate.fit"]], "inverse_transform() (columndroptrivial method)": [[2, "complexdf_processor.column_transformer._base.ColumnDropTrivial.inverse_transform"]], "inverse_transform() (columnmaprotate method)": [[2, "complexdf_processor.column_transformer._base.ColumnMapRotate.inverse_transform"]], "inverse_transform() (complexdfconjugate method)": [[2, "complexdf_processor.column_transformer._base.ComplexDfConjugate.inverse_transform"]], "transform() (columndroptrivial method)": [[2, "complexdf_processor.column_transformer._base.ColumnDropTrivial.transform"]], "transform() (columnmaprotate method)": [[2, "complexdf_processor.column_transformer._base.ColumnMapRotate.transform"]], "transform() (complexdfconjugate method)": [[2, "complexdf_processor.column_transformer._base.ComplexDfConjugate.transform"]], "seriesprocessor (class in complexdf_processor.column_transformer._series_processor)": [[3, "complexdf_processor.column_transformer._series_processor.SeriesProcessor"]], "complexdf_processor.column_transformer._series_processor": [[3, "module-complexdf_processor.column_transformer._series_processor"]], "conj() (seriesprocessor static method)": [[3, "complexdf_processor.column_transformer._series_processor.SeriesProcessor.conj"]], "rotate() (seriesprocessor static method)": [[3, "complexdf_processor.column_transformer._series_processor.SeriesProcessor.rotate"]], "series() (seriesprocessor static method)": [[3, "complexdf_processor.column_transformer._series_processor.SeriesProcessor.series"]], "unique() (seriesprocessor static method)": [[3, "complexdf_processor.column_transformer._series_processor.SeriesProcessor.unique"]], "complexdf_processor.complex_float": [[4, "module-complexdf_processor.complex_float"]], "complexfloat (class in complexdf_processor.complex_float._base)": [[5, "complexdf_processor.complex_float._base.ComplexFloat"]], "complexdf_processor.complex_float._base": [[5, "module-complexdf_processor.complex_float._base"]], "conjugate() (complexfloat method)": [[5, "complexdf_processor.complex_float._base.ComplexFloat.conjugate"]], "rotate() (complexfloat method)": [[5, "complexdf_processor.complex_float._base.ComplexFloat.rotate"]], "complexfloatcore (class in complexdf_processor.complex_float._complex_type)": [[6, "complexdf_processor.complex_float._complex_type.ComplexFloatCore"]], "arg (complexfloatcore property)": [[6, "complexdf_processor.complex_float._complex_type.ComplexFloatCore.arg"]], "complexdf_processor.complex_float._complex_type": [[6, "module-complexdf_processor.complex_float._complex_type"]], "conj (complexfloatcore property)": [[6, "complexdf_processor.complex_float._complex_type.ComplexFloatCore.conj"]], "mod (complexfloatcore property)": [[6, "complexdf_processor.complex_float._complex_type.ComplexFloatCore.mod"]], "tuple (complexfloatcore property)": [[6, "complexdf_processor.complex_float._complex_type.ComplexFloatCore.tuple"]], "complexdfprocessordemo (class in complexdf_processor.complexdf_processor)": [[7, "complexdf_processor.complexdf_processor.ComplexDfProcessorDemo"]], "complexdf_processor.complexdf_processor": [[7, "module-complexdf_processor.complexdf_processor"]], "gen_demo_data() (complexdfprocessordemo method)": [[7, "complexdf_processor.complexdf_processor.ComplexDfProcessorDemo.gen_demo_data"]]}})